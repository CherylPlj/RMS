@{
    ViewData["Title"] = "Cozy Homes - Users";
    Layout = "~/Views/Shared/_LayoutPM.cshtml";
}
@model List<UserViewModel>

<h1>User Management</h1>
<table>
    <thead>
        <tr>
            <th>#</th>
            <th>Name</th>
            <th>Email</th>
            <th>Role</th>
            <th>IsActive</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            int index = 1;
            foreach (var user in Model)
            {
                <tr>
                    <td>@index</td>
                    <td>@user.FirstName @user.LastName/td>
                    <td>@user.Email</td>
                    <td>
                        @(user.IsActive ? "Active" : "Inactive")
                    </td>
                    <td class="action-icons">
                        <a asp-action="EditUser" asp-route-id="@user.Id" title="Edit" style="color:#547AA5;font-size: 20px;"><i class="fas fa-edit edit"></i></a>
                        <!-- Form for deleting the unit -->
                        <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post" style="display:inline;">
                            <button type="submit" title="Delete" style="color:#C04A4A; background: none; border: none; padding: 0; width: fit-content; height: fit-content;">
                                <i class="fas fa-trash delete" style="font-size: 20px;"></i>
                            </button>
                        </form>
                    </td>
                </tr>
                index++;
            }
        }
        else
        {
            <tr>
                <td colspan="5" style="text-align:center;">No users found.</td>
            </tr>
        }

        </table>
    @* </div> *@

    <script>
                // script.js
        document.querySelectorAll('button').forEach(button => {
            button.addEventListener('click', function () {
                const row = this.closest('tr');
                const userId = row.cells[0].textContent;
                const username = row.cells[1].textContent;
                const email = row.cells[2].textContent;
                const role = row.cells[3].value;
                const status = row.querySelectorAll('select')[1].value;

                alert(`Updating user ${username} (ID: ${userId})\nEmail: ${email}\nRole: ${role}\nStatus: ${status}`);

                // In a real application, send this data to a backend system to update the user's role or status.
            });
        });

     document.querySelector(".search-unit-button").addEventListener("click", function () {
            var searchQuery = document.querySelector("input[type='text']").value;

            // Make an AJAX request to search for units based on the input
            fetch(`/PropertyManager/SearchUnits?query=${searchQuery}`)
                .then(response => response.json())
                .then(data => {
                    updateUnitsTable(data);
                })
                .catch(error => console.error('Error:', error));
        });


        // Function to handle input field changes
        document.querySelector("#searchInput").addEventListener("input", function () {
            var searchQuery = this.value;

            // If the search input is empty, fetch all units
            if (searchQuery === "") {
                fetch(`/PropertyManager/SearchUnits?query=`)
                    .then(response => response.json())
                    .then(data => {
                        updateUnitsTable(data);
                    })
                    .catch(error => console.error('Error:', error));
            }
        });


        // Update the table with the search results
        function updateUnitsTable(units) {
            const tbody = document.querySelector("table tbody");
            tbody.innerHTML = ''; // Clear the existing rows

            if (units.length > 0) {
                units.forEach((unit, index) => {
                    let row = document.createElement('tr');
                    row.innerHTML = `
                            <td>${index + 1}</td>
                            <td>${unit.unitName}</td>
                            <td>${unit.pricePerMonth}</td>
                            <td>${unit.unitStatus}</td>
                            <td class="action-icons">
                                <a href="/Units/EditUnitPage/${unit.unitId}" title="Edit"><i class="fas fa-edit edit"></i></a>
                                <form action="/Units/DeleteUnit/${unit.unitId}" method="post" style="display:inline;">
                                    <button type="submit" title="Delete" style="background: none; border: none;">
                                        <i class="fas fa-trash delete"></i>
                                    </button>
                                </form>
                            </td>z
                        `;
                    tbody.appendChild(row);
                });
            } else {
                tbody.innerHTML = '<tr><td colspan="5" style="text-align:center;">No units found.</td></tr>';
            }
        }
    </script>
@* </body> *@
@* </html> *@
